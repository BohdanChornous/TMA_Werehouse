# Generated by Django 5.0.3 on 2024-03-27 23:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Items',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_group', models.IntegerField(choices=[(0, 'Meat'), (1, 'Fish'), (2, 'Vegetables'), (3, 'Fruit'), (4, 'Groats')], default=0)),
                ('unit_measurement', models.IntegerField(choices=[(0, 'Kg'), (1, 'Gr'), (2, 'Mg'), (3, 'Mkg')], default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=4)),
                ('status', models.CharField(max_length=256)),
                ('storage_location', models.CharField(max_length=256)),
                ('contact_person', models.CharField(max_length=256)),
                ('photo', models.ImageField(blank=True, upload_to='images')),
            ],
            options={
                'verbose_name_plural': 'Items',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(blank=True, max_length=20)),
                ('employee_name', models.CharField(max_length=20)),
                ('unit_measurement', models.IntegerField(choices=[(0, 'Kg'), (1, 'Gr'), (2, 'Mg'), (3, 'Mkg')], default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=4)),
                ('comment', models.CharField(blank=True, max_length=256)),
                ('status', models.IntegerField(choices=[(0, 'New'), (1, 'Approved'), (2, 'Rejected')], default=0)),
                ('item_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='TMA_Warehous.items')),
            ],
            options={
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='RequestRows',
            fields=[
                ('request_row_id', models.AutoField(primary_key=True, serialize=False)),
                ('unit_measurement', models.IntegerField(choices=[(0, 'Kg'), (1, 'Gr'), (2, 'Mg'), (3, 'Mkg')], default=0)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=4)),
                ('comment', models.CharField(blank=True, max_length=256)),
                ('item_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='item', to='TMA_Warehous.items')),
                ('request_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='TMA_Warehous.orders')),
            ],
            options={
                'verbose_name_plural': 'Request Rows Directory',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('last_name', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('email', models.EmailField(default=None, max_length=100, unique=True)),
                ('password', models.CharField(default=None, max_length=255)),
                ('role', models.IntegerField(choices=[(0, 'Employee'), (1, 'Coordinator'), (2, 'Administrator')], default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
